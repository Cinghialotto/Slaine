	; ***** GENERAL PROCEDURES *****	; MAKE TABLE FOR OBJECTS	; WHICH ARE ON SLAINE OR ROOM	; OR BOTH A=ACTION AFTER SELECTEDSLAIN	STA DOWHAT	LDA #0		; ON SLAINE	LDX #0		; ONLY	JMP INRINROOM	STA DOWHAT	LDA ROOM	; IN ROOM	LDX ROOM	; ONLY	JMP INRSLARO	STA DOWHAT	LDA #0		; ON SLAINE	LDX ROOM	; OR IN ROOMINR	STA NOEE+1	STX NOEE2+1	LDA #<OBJ1	STA TEMPM+1	LDA #>OBJ1	STA TEMPM+0	LDA #51		; START OF	STA WHATO	; SCROLL OPTNUM	LDX #0	STX LISTO	LDY #1NEXOB	LDA (TEMPM),Y	CMP #255	; END MARKER ?	BEQ RETRNNOEE	CMP #255	; SMC	BEQ GOTONOEE2	CMP #255	BNE NOTTGOTO	LDA WHATO	STA LIST+0,X	INX		; NEXT IN LISTNOTT	INC WHATO	; NEXT OBJECT	LDA TEMPM+0	CLC	ADC #4	STA TEMPM+0	BCC NEXOB	INC TEMPM+1	BNE NEXOBRETRN	DEY		; TO 0	LDA (TEMPM),Y	INY		; BACK TO 1	CMP #255	; DELIMITER	BNE NOEE	JMP ADDEN	; + OK	;LDA #60	; TAKE OUT	;JMP LOOSE	; UKKO ONLYCLEARB	LDX #7	; STOP ALL SCROLLINGSTOPT	LDA #0	STA USED+0,X	LDY WHERAY,X	LDA #255	STA OPTNUM,Y		DEX	BPL STOPT	RTSDELTH	LDX #7		; STOP ONE LINENEXO	LDY WHERAY+0,X	; FROM SCROLLING	CPY WHATY	BEQ HALTHOTH	DEX	BPL NEXO	RTS	; IF NOT THEREHALT	LDA #0	; STOP LINE FROM	STA USED+0,X	LDA #255	STA OPTNUM,Y	JMP FADEL	; FADE LINE	BLOCK	GAIN	STA TEMP	; ADD WHAT	LDX #255:LOOP	INX	LDA LIST+0,X	CMP TEMP	BEQ EROR	CMP #255	BNE :LOOP	LDA TEMP	; NEW OPTION	STA LIST+0,X	LDA #255	; END OF LIST	STA LIST+1,X	RTS	BLOCKLOOSE	STA TEMP	; DELETE WHAT	LDX #255:LOOP	INX	LDA LIST+0,X	CMP #255	BEQ EROR	CMP TEMP	BNE :LOOP	BLOCK:LOOP	LDA LIST+1,X	CMP #255	; END OF LIST	BEQ ENOL	LDA LIST+1,X	STA LIST+0,X	INX	BNE :LOOPENOL	STA LIST+0,XEROR	RTS ITM	LDA WHATO	CMP #14	BEQ CANDL	LDA WHATS	CMP #51	BNE WEEQW	JSR FACE	LDX #T+36	JSR WINDOW	SEC	RTSWEEQW	CMP #51+3	BCS YOUC	JSR FACEPEN	LDX #T+37	; TWIT	JSR WINDOW	SEC	RTSYOUC	CLC	RTSCANDL	LDA ROOM	CMP #82	BCC YOUC	CMP #109	BCS YOUC		BCC PENADDW	SED	CLC	ADC WARP+0	STA WARP+0		LDA WARP+1	ADC #0	STA WARP+1	CMP MAXW+1	; IF WAPR<MAXW	BCC ZUB		; EXIT	BNE CHH		; IF NOT SAME	LDA WARP+1	; THEN LARGER	CMP MAXW+1	; THAN MAX SO	BCC CHH		; CHANGE	LDA WARP+0	; IF HERE	CMP MAXW+0	; HIGH BYTES	BEQ ZUB		; SAME AS EACH.	BCC ZUB		; IF LESS THENCHH	LDA MAXW+0	; SET YOU WARP	STA WARP+0	; TO MAX RATING	LDA MAXW+1	STA WARP+1ZUB	CLD	RTSSUBW	STA MIKE1	SED	LDA WARP+0	SEC	SBC MIKE1	STA WARP+0	LDA WARP+1	SBC #0	BMI OPSS	; IF 255 DEAD	STA WARP+1	CLD	CLC	RTS	OPSS	CLD	SEC	RTSADDM	SED	CLC	ADC MAXW+0	STA MAXW+0	LDA MAXW+1	ADC #0	STA MAXW+1	CLD	RTS	; ADD TO LIST OF SCROLLING	; OPTIONS WHEN PLACE IS FREESET	LDX #0	TRYAG	LDA USED,X	; BEING USED	BNE OOOT	; YESHAGG	LDY LISTO	; OFFSET	LDA (MIKE1),Y	LDA LIST,Y	; NEXT IN LIST	CMP #255	; END OF LIST	BNE COO		; IF SO THEN	LDA #0		; RESET TO 0	STA LISTO	JMP HAGGCOO	INC LISTO	STA MIKE2	; OPTION NUMBER	LDA #255	; DONT USE	STA USED,X	; AGAIN	LDY POSITIONNEXTP	LDA OPTNUM,Y	; ELSE OPTION	CMP #255	; SCROLLING	BEQ FREE		INY		; POSITION	CPY #17		; 0 TO 16	BCC NEXTP		LDY #0		JMP NEXTP	FREE	STY MIKE1	;POSITION	STY POSITION	LDA MIKE2	STA OPTNUM,Y	STA PICKED,Y 	TAY	JSR RAND	AND #1	BEQ THISW	LDA #255	NOPPTHISW	LDA #1	;DIRECTION	JSR SETBITSOOOT	INX	CPX #8	BNE TRYAG       		RTSSETBITS STX XTEMP	STA SCDIR,X	;DIRECTION	LDA OPTDLY,Y	;TABLED	STA WHDELY,X	;DELAY FOR EACH	LDA OPTML,Y	;WHAT PIECE OF	STA SCMEML,X	;TEXT TO SCROLL	LDA OPTMH,Y	;IN	STA SCMEMH,X	LDA #0	STA SCOUNT,X	;FOR NEW CHAR	STA SCDELY,X	;WHEN DELAYED	LDY MIKE1	;0 TO 16	STY WHERAY,X	;WHAT Y POS	LDA SCDIR,X	;DIRECTION	BPL SCRLFT	LDA SEED	AND #2	BEQ SEER    	LDA SRPTL,Y	; L TO R PIXEL	STA WHSCRL,X	LDA SRPTH,Y	JMP ANDWSEER	LDA SRCTL,Y	; L TO R CHAR	STA WHSCRL,X	LDA SRCTH,YANDW	STA WHSCRH,X	LDA #13		; 0 TO 13	JMP MADONNASCRLFT	LDA SEED	AND #2	BEQ SEER2	LDA SLPTL,Y	; R TO L PIXEL	STA WHSCRL,X       LDA SLPTH,Y	JMP ANDW2SEER2	LDA SLCTL,Y	; R TO L CHAR	STA WHSCRL,X	LDA SLCTH,YANDW2	STA WHSCRH,X	LDA #0		; 13 TO 0MADONNA STA SSIZE,X	LDA SEED		AND #2	BEQ CHR	LDA #1	NOPPCHR	LDA #8	STA SPEED,X	TYA	ASL A		;FROM WHERE	ASL A		;NEW BYTES	ASL A		;ARE TO BE	STA SCOFFB,X	;PUT	LDY #0		;PLOT FIRST	JSR FIRSTT	;BIT OF DATA	LDX XTEMP    		RTSSCROLS	LDX #0	JSR SCRTH	LDX #1	JSR SCRTH	LDX #2       JSR SCRTH	LDX #3	JSR SCRTH	LDX #4	JSR SCRTH	LDX #5	JSR SCRTH	LDX #6	JSR SCRTH	LDX #7SCRTH	LDA USED,X	BEQ JURET	LDA SCDELY,X	;FOR WHEN	BEQ DOIT	;TEXT IS AT	CMP #255	;DON'T MOVE	BEQ JURET	;OFF OK	DEC SCDELY,X	;ITS OBJECTIVEJURET	RTS		;POINT ON SCREENDOIT	STX SSAVEX	LDA WHSCRL,X	STA WHAT+1	LDA WHSCRH,X	STA WHAT+2WHAT	JSR &FFFF	;SMC	LDX SSAVEX	LDA SCOUNT,X	CLC	ADC SPEED,X	;SPEED 1 OR 8	AND #7		;NEWCHAR	STA SCOUNT,X	;NEEDED	BNE JURET	;YET?	LDA SSIZE,X	;OFFSET	CLC 		;IN OPTION	ADC SCDIR,X	;0 TO 13	CMP #14		;OR 13 TO 0	BCC STOII	LDY WHERAY,X	LDA OPTNUM,Y	;IF OPTION =0	BNE NODEL	;THEN HAS BEEN	STA USED,X	LDA PICKED,Y	CMP #46		;IF BEHEAD	BNE NOBH	;IS GONE OFF	JSR LOOSE	;LOOSE FROM LISTNOBH	LDA #255	;NOT BEING USED	STA OPTNUM,Y	STA PICKED,Y	;ALLOW FOR BEING	RTS		;BLANKED OUT		NODEL	LDA WHDELY,X	;NOW DELAY	STA SCDELY,X	;IT	LDA #>OPT00	;BEFORE	STA SCMEML,X	;IT GETS	LDA #<OPT00	;BLANKED	STA SCMEMH,X	;OUT	LDA #0       STA OPTNUM,Y	LDA SCDIR,X	BPL STI	LDA #13	NOPPSTI	LDA #0STOII	STA SSIZE,X	;CHARPOS	TAYFIRSTT	LDA SCMEML,X	STA TEXMEM+0	LDA SCMEMH,X	STA TEXMEM+1	LDA SCOFFB,X	TAX	LDA (TEXMEM),Y	JMP TTEXT	; MAIN MENU	;   "**************"OPT00	ASC "              "OPT01	ASC "     MOVE     "OPT02	ASC "    EXAMINE   "OPT03	ASC "     LOOK     "OPT04	ASC "    STATUS    "OPT05	ASC "    OBJECTS   "OPT06	ASC "    ACTIONS   "OPT07	ASC "   HIT UKKO   "OPT08	ASC "  INVENTORY   "OPT09	ASC "    ATTACK    "OPT10	ASC "      OK      "OPT11	ASC " YES          "OPT12	ASC "           NO "OPT13	ASC " ITS ALL OVER "	; MOVE MENUOPT14	ASC "     NORTH    "	OPT15	ASC "  NORTH EAST  "OPT16	ASC "     EAST     "OPT17	ASC "  SOUTH EAST  "OPT18	ASC "     SOUTH    "OPT19	ASC "  SOUTH WEST  "OPT20	ASC "     WEST     "OPT21	ASC "  NORTH WEST  "	; OBJECTS MENUOPT22	ASC "   PICK UP    "OPT23	ASC "  DROP ITEM   "OPT24	ASC "  TAKE FROM   "OPT25	ASC "   PUT INTO   "OPT26	ASC "    PUT ON    "	; ACTIONS MENUOPT27	ASC "     OPEN     "OPT28	ASC "     CLOSE    "OPT29	ASC "   GIVE UKKO  "OPT30	ASC "   TAKE FROM  "OPT31	ASC "    CONSUME   "OPT32	ASC "      ASK     "OPT33	ASC "      USE     "OPT34	ASC "     REST     "OPT35	ASC "  DRINK ALE   "OPT36	ASC "   GIVE UP    "	; LOOK MENUOPT37	ASC " LOOK AROUND  "OPT38	ASC "  LOOK INTO   "OPT39	ASC "   LOOK ON    "	; ATTACK MENUOPT40	ASC "  WARP        "OPT41	ASC "    KICK      "OPT42	ASC "         DUCK "OPT43	ASC "  PUNCH       "OPT44	ASC "        SWING "OPT45	ASC " LEAP         "OPT46	ASC "   BEHEAD     "OPT47	ASC "       DEFEND "OPT48	ASC "      DODGE   "OPT49	ASC " THROW        "OPT50	ASC " SHOUT        "; SPECIAL	; OBJECT SECTIONSOPT51	ASC "     AXE      "OPT52	ASC "     TORC     "OPT53	ASC "   HARNESS    "OPT54	ASC "    BOTTLE    "	; 253OPT55	ASC "    COINS     "OPT56	ASC "     RING     "OPT57	ASC "     RING     "OPT58	ASC "    CHEST     "	; 255OPT59	ASC "    POUCH     "	; 254OPT60	ASC "    SPADE     "OPT61	ASC "    IRONS     "OPT62	ASC "    FLUTE     "OPT63	ASC "    TOOLS     "OPT64	ASC "    CANDLE    "OPT65	ASC "    CARDS     "OPT66	ASC "    SHAKER    "	; 248OPT67	ASC "     DICE     "OPT68	ASC "  RUSTY KEY   "OPT69	ASC "    BOTTLE    "OPT70	ASC "   PHOENIX    "	; 247OPT71	ASC "      EYE     "OPT72	ASC "     LENS     "OPT73	ASC "     FLEAS    "OPT74	ASC "      BAR     "	; 251OPT75	ASC "     UKKO     "	; 250OPT76	ASC "     BREAD    "OPT77	ASC "     BEER     "OPT78	ASC "   FOUNTAIN   "	; 249OPT79	ASC "     BEER     "	; 252OPT80	ASC "     CHARM    "OPT81	ASC "    DAGGER    "OPT82	ASC "  TINDER BOX  "OPT83	ASC "  LOCK PICKS  "OPT84	ASC "    FURNACE   "	; 246OPT85	ASC "     TONGS    "OPT86	ASC " WATER BUCKET "	; 245OPT87	ASC "    EARTH     "OPT88	ASC "     HOLE     "	; 244OPT89	ASC "    EARTH     "OPT90	ASC "     HOLE     "	; 243OPT91	ASC "     BODY     "	; 242OPT92	ASC "    MOUND     "OPT93	ASC "    COFFIN    "	; 241OPT94	ASC "     DOOR     "OPT95	ASC "   TELESCOPE  "	; 240OPT96	ASC "     ARCH     "OPT97	ASC "     ARCH     "OPT98	ASC "  GRAVESTONE  "OPT99	ASC "   RAM SAVE   "OPT100	ASC "   RAM LOAD   "	; DELAYS FOR EACH OPTIONOPTDLY	DB 000,080,230,090,110,120	DB 140,150,090,220,200,180	DB 080,000,120,090,110,130	DB 140,160,180,230,150,170	DB 210,150,120,140,140,200	DB 130,210,120,200,120,140	DB 140,170,140,120		DB 100,100,100,100,100	DB 50,50,100,100,100,100	DB 50,50,50,50,50,50,50,50	DB 50,50,50,50,50,50,50,50	DB 50,50,50,50,50,50,50,50	DB 50,50,50,50,50,50,50,50	DB 50,50,50,50,50,50,50,50	DB 50,50,50,50,50,50,50,50	DB 100,100OPTML	DB >OPT00,>OPT01,>OPT02,>OPT03	DB >OPT04,>OPT05,>OPT06,>OPT07	DB >OPT08,>OPT09,>OPT10,>OPT11	DB >OPT12,>OPT13,>OPT14,>OPT15	DB >OPT16,>OPT17,>OPT18,>OPT19	DB >OPT20,>OPT21,>OPT22,>OPT23	DB >OPT24,>OPT25,>OPT26,>OPT27	DB >OPT28,>OPT29,>OPT30,>OPT31	DB >OPT32,>OPT33,>OPT34,>OPT35	DB >OPT36,>OPT37,>OPT38,>OPT39	DB >OPT40,>OPT41,>OPT42,>OPT43	DB >OPT44,>OPT45,>OPT46,>OPT47	DB >OPT48,>OPT49,>OPT50,>OPT51	DB >OPT52,>OPT53,>OPT54,>OPT55	DB >OPT56,>OPT57,>OPT58,>OPT59	DB >OPT60,>OPT61,>OPT62,>OPT63	DB >OPT64,>OPT65,>OPT66,>OPT67	DB >OPT68,>OPT69,>OPT70,>OPT71	DB >OPT72,>OPT73,>OPT74,>OPT75	DB >OPT76,>OPT77,>OPT78,>OPT79	DB >OPT80,>OPT81,>OPT82,>OPT83	DB >OPT84,>OPT85,>OPT86,>OPT87	DB >OPT88,>OPT89,>OPT90,>OPT91	DB >OPT92,>OPT93,>OPT94,>OPT95	DB >OPT96,>OPT97,>OPT98,>OPT99	DB >OPT100OPTMH	DB <OPT00,<OPT01,<OPT02,<OPT03	DB <OPT04,<OPT05,<OPT06,<OPT07	DB <OPT08,<OPT09,<OPT10,<OPT11	DB <OPT12,<OPT13,<OPT14,<OPT15	DB <OPT16,<OPT17,<OPT18,<OPT19	DB <OPT20,<OPT21,<OPT22,<OPT23	DB <OPT24,<OPT25,<OPT26,<OPT27	DB <OPT28,<OPT29,<OPT30,<OPT31	DB <OPT32,<OPT33,<OPT34,<OPT35	DB <OPT36,<OPT37,<OPT38,<OPT39	DB <OPT40,<OPT41,<OPT42,<OPT43	DB <OPT44,<OPT45,<OPT46,<OPT47	DB <OPT48,<OPT49,<OPT50,<OPT51	DB <OPT52,<OPT53,<OPT54,<OPT55	DB <OPT56,<OPT57,<OPT58,<OPT59	DB <OPT60,<OPT61,<OPT62,<OPT63	DB <OPT64,<OPT65,<OPT66,<OPT67	DB <OPT68,<OPT69,<OPT70,<OPT71	DB <OPT72,<OPT73,<OPT74,<OPT75	DB <OPT76,<OPT77,<OPT78,<OPT79	DB <OPT80,<OPT81,<OPT82,<OPT83	DB <OPT84,<OPT85,<OPT86,<OPT87	DB <OPT88,<OPT89,<OPT90,<OPT91	DB <OPT92,<OPT93,<OPT94,<OPT95	DB <OPT96,<OPT97,<OPT98,<OPT99	DB <OPT100	; SPRITE TABLE FOR HAND ANIM.POINTT1 DB 64,68,72,76,80,84,88,92,96POINTT2 DB 65,69,73,77,81,85,89,93,97POINTB1 DB 66,70,74,78,82,86,90,94,98POINTB2 DB 67,71,75,79,83,87,91,95,99RAND	STX XTEMP	LDX #8	RANDL	LDA SEED+0	AND #%01001000	ADC #%00111000	ASL A		ASL A	ROL SEED+2	ROL SEED+1	ROL SEED+0	DEX	BNE RANDL	LDX XTEMP	LDA SEED+0	RTS	;WORK OUT MEM FOR X,Y	;FOR BITMAP SCREEN	;AND COLOUR MEMORYMEMXY	LDA #0	STA MIKE1+1	TXA	ASL A	ROL MIKE1+1	ASL A	ROL MIKE1+1	ASL A	ROL MIKE1+1	CLC	ADC S320L,Y	STA MIKE1+0	;SCREEN LOW	LDA MIKE1+1	ADC S320H,Y	STA MIKE1+1	;SCREEN HIGH	TXA	CLC	ADC COLRAML,Y	STA MIKE2+0	;COLOUR LOW	LDA COLRAMH,Y	ADC #0	STA MIKE2+1	;COLOUR HIGH	RTS	;MEM LOW AT (0 TO 24)S320L	DB &00,&40,&80,&C0	DB &00,&40,&80,&C0	DB &00,&40,&80,&C0	DB &00,&40,&80,&C0	DB &00,&40,&80,&C0	DB &00,&40,&80,&C0	DB &00S320H	DB &E0,&E1,&E2,&E3	DB &E5,&E6,&E7,&E8	DB &EA,&EB,&EC,&ED	DB &EF,&F0,&F1,&F2	DB &F4,&F5,&F6,&F7	DB &F9,&FA,&FB,&FC	DB &FECOLRAML DB &00,&28,&50,&78	DB &A0,&C8,&F0,&18	DB &40,&68,&90,&B8	DB &E0,&08,&30,&58	DB &80,&A8,&D0,&F8	DB &20,&48,&70,&98	DB &C0COLRAMH DB <COL,<COL	DB <COL,<COL	DB <COL,<COL	DB <COL,<COL+&100	DB <COL+&100,<COL+&100	DB <COL+&100,<COL+&100	DB <COL+&100,<COL+&200	DB <COL+&200,<COL+&200	DB <COL+&200,<COL+&200	DB <COL+&200,<COL+&200	DB <COL+&300,<COL+&300	DB <COL+&300,<COL+&300	DB <COL+&300	;SCAN JOYSTICKJOYSTICK	LDA #255	STA CIA1+2	LDA #%11111110	; &FE	STA CIA1+0	LDA CIA1+1	CMP #%11101111	; &EF	BNE SOUNDN	LDA #255	STA MUSIC	;JSR &60C4	; TURN OFFSOUNDN	LDA CIA1+1	CMP #%11110111	; &F7	BNE SOUNDF	LDA #0	STA MUSIC	;JSR &5700	; TURN ONSOUNDF	LDA #%11101111	; &EF	STA CIA1+0	LDA CIA1+1	 	CMP #%10111111	; &BF O	BNE NKP1	LDA #1	NOPP	NKP1	LDA #0	STA LEFT 	LDA #%11011111	; &DF	STA CIA1+0		LDA CIA1+1	CMP #%11111101	; &FD P	BNE NKP2	LDA #1	NOPPNKP2	LDA #0	STA RIGHT	LDA CIA1+1	CMP #%10111111	; &BF @	BNE NKP3	LDA #1	NOPPNKP3	LDA #0	STA FIRE	LDA #%11111101	; &FD	STA CIA1+0	LDA CIA1+1	CMP #%11111011	; &FB A	BNE NKP4	LDA #1	NOPPNKP4	LDA #0	STA DOWN	LDA #%01111111	; &7F Q	STA CIA1+0	LDA CIA1+1	CMP #%10111111	; &BF	BNE NKP5	LDA #1	NOPPNKP5	LDA #0 	STA UP	;RTS	JOYS	LDA #0		; SET DDRA	STA CIA1+2	LDA CIA1+0	; PORT1A	AND #%00011111	EOR #%00011111	STA NTSC	LDA #0	LSR NTSC	ROL A	ORA UP	STA UP	LDA #0	LSR NTSC	ROL A	ORA DOWN	STA DOWN	LDA #0	LSR NTSC	ROL A	ORA LEFT	STA LEFT	LDA #0	LSR NTSC	ROL A	ORA RIGHT	STA RIGHT	LDA #0	LSR NTSC	ROL A	ORA FIRE	STA FIRE	RTS	IF DEB=255	; POKE SCORE VALUE IN	; SPRITE AREASVALUES	STA DEBUG+0	STX DEBUG+1	STY DEBUG+2	LDA #0	STA TMP	LDA #>(253*64+BANK)	STA MIKE1	LDA #<(253*64+BANK)	STA MIKE1+1	LDA DEBUG+2	JSR ONEB	LDA DEBUG+1	JSR ONEB	LDA DEBUG+0ONEB	STA MIKE2	AND #&F0	LSR A	LSR A	LSR A	LSR A	JSR NUMB	LDA MIKE2	AND #&0FNUMB	CMP #10	BCC SE	ADC #6SE	ASL A	ASL A	ASL A	TAX	LDY #0	LDA NUMBRS+0,X	STA (MIKE1),Y	LDY #1*3	LDA NUMBRS+1,X	STA (MIKE1),Y	LDY #2*3	LDA NUMBRS+2,X	STA (MIKE1),Y	LDY #3*3	LDA NUMBRS+3,X	STA (MIKE1),Y	LDY #4*3	LDA NUMBRS+4,X	STA (MIKE1),Y	LDY #5*3	LDA NUMBRS+5,X	STA (MIKE1),Y	LDY #6*3	LDA NUMBRS+6,X	STA (MIKE1),Y	LDY #7*3	LDA NUMBRS+7,X	STA (MIKE1),Y	LDY TMP	LDA ADDMX,Y	STA MIKE1	INC TMP	RTSADDMX	DB >((253*64)+BANK+01)	DB >((253*64)+BANK+02)	DB >((254*64)+BANK+00)	DB >((254*64)+BANK+01)	DB >((254*64)+BANK+02)	FITTEXT	LDY #0	STY TEXMEM+1	ASL A		ROL TEXMEM+1	ASL A	ROL TEXMEM+1	ASL A	ROL TEXMEM+1	ADC #>(CHSET-(32*8))	STA TEXMEM	LDA TEXMEM+1	ADC #<(CHSET-(32*8))	STA TEXMEM+1	LDY #0	LDA (TEXMEM),Y	STA TST+0,X	INY	LDA (TEXMEM),Y	STA TST+1,X	INY	LDA (TEXMEM),Y	STA TST+2,X	INY	LDA (TEXMEM),Y	STA TST+3,X	INY	LDA (TEXMEM),Y	STA TST+4,X	INY	LDA (TEXMEM),Y	STA TST+5,X	INY	LDA (TEXMEM),Y	STA TST+6,X	;INY		; ALL WAYS BLANK	;LDA (TEXMEM),Y	;STA TST+7,X	RTSCHSET	HEX	"0000000000000000"	HEX	"1010101010001000"	HEX	"0028282800000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0010102000000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0000000004040800"	HEX	"0000000000000000"	HEX	"00000000000C0C00"	HEX	"0000000000000000"NUMBRS	HEX	"FC66666E7666BC00"	HEX	"183858181C182000"	HEX	"FC067EC4C0FE4200"	HEX	"FC8E3C06067E8400"	HEX	"1C183064FE0C1800"	HEX	"FEC2E07E067E8400"	HEX	"7EC0FCC6E67C8000"	HEX	"FC8C0C0C0E0C1000"	HEX	"7C663C66667E8000"	HEX	"FECCCC7C0E0C1000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"0000000000000000"	HEX	"3C061E2666663D00"	HEX	"7E303E3333335E00"	HEX	"3A64606060231F00"	HEX	"1F063E6666663D00"	HEX	"3E61687C60613E00"	HEX	"3E61687C60607000"	HEX	"3E6363231F437E00"	HEX	"70607E6363666F00"	HEX	"381C181818381C00"	HEX	"5F23030303261C00"	HEX	"70606468706C6300"	HEX	"4030303030384F00"	HEX	"367F6B6B63237700"	HEX	"5E33333333367700"	HEX	"7E33733333130E00"	HEX	"5E3333332E207000"	HEX	"3D6666663E060F00"	HEX	"5E33303030307800"	HEX	"3E61603E03633E00"	HEX	"7F19181818183C00"	HEX	"3763636363331E00"	HEX	"7331323438302000"	HEX	"7723636B6B7B3600"	HEX	"436634181C366300"	HEX	"432363633F031E00"	HEX	"633E040810337F00"